{
  "name": "BookSmartly",
  "description": "A booking and appointment management application",
  "scripts": {
    "install": "npm install openai square && cd server && pip install -r requirements.txt && cd ..",
    "run": "npm run dev & cd server && uvicorn main:app --reload --host 0.0.0.0 --port 8000",
    "build": "npm run build"
  },
  "port": 3000,
  "environment": {
    "DATABASE_URL": "postgresql://username:password@localhost:5432/booksmartly",
    "API_KEY": "your_api_key",
    "PORT": "3000",
    "VITE_OPENAI_API_KEY": "your_openai_api_key",
    "SQUARE_ENVIRONMENT": "sandbox",
    "SQUARE_ACCESS_TOKEN": "EAAAl8GPJNw7KWjpWHiIX9ZFGOjqoBtG1cAhn32Lc_cUhQBL7btGp1iTvl4yYk8J",
    "SQUARE_LOCATION_ID": "LZC177YC3SB0M",
    "VITE_API_URL": "http://localhost:8000"
  },
  "projectInstructions": [
    "BookSmartly is a booking and appointment management application built with React, TypeScript, and Vite.",
    "The application uses the Fine.dev SDK for authentication and database operations.",
    "The project follows a component-based architecture with pages, components, and API services.",
    "The application uses Redux Toolkit for state management.",
    "The UI is built with TailwindCSS and shadcn/ui components.",
    "The application has user and admin sections with different permissions.",
    "The database schema includes users, organizations, appointments, appointment types, and locations.",
    "The application integrates with OpenAI's GPT models for AI-powered features.",
    "The AI features include a chat assistant and financial analytics capabilities.",
    "The OpenAI integration uses function calling to perform actions within the application.",
    "The application requires an OpenAI API key set as VITE_OPENAI_API_KEY in the environment variables.",
    "The application includes a FastAPI backend for Square payment integration.",
    "The Square integration allows sending invoices to clients after appointments.",
    "The project uses a Docker setup with separate containers for frontend and backend.",
    "The Square integration uses environment variables for configuration and supports both sandbox and production modes."
  ]
}